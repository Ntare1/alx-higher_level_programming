The "0-add_integer" module
===========================

Using "add_integer"
---------------------

import function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 1 and 2
    >>> add_integer(1, 2)
    3

Adding 9 and 21
    >>> add_integer(9, 21)
    30

Adding an integer and character
    >>> add_integer(4, '2')
    Traceback (most recent call last):
             ...
    TypeError: b must be an integer


Adding 100 and -2
    >>> add_integer(100, -2)
    98

Giving one argument(2)
    >>> add_integer(2)
    100

Adding a float and integer 100.2 and -2
    >>> add_integer(100.3, -2)
    98

Add an integer 4 and a string "School"
    >>> add_integer(4, "School")
    Traceback (most recent call last):
             ...
    TypeError: b must be an integer

Use the function to add None
    >>> add_integer(None)
    Traceback (most recent call last):
             ...
    TypeError: a must be an integer

Adding two floats
    >>> add_integer(2.5, 4.6)
    6

Adding two characters
    >>> add_integer('a', 'b')
    Traceback (most recent call last):
             ...
    TypeError: a must be an integer

Adding a string
    >>> add_integer('run')
    Traceback (most recent call last):
              ...
    TypeError: a must be an add_integer

Adding a float NaN
    >>> add_integer(0, float('Nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer

Adding infinity
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
              ...
    OverflowError: cannot convert float infinity to integer

Missing two arguments
    >>> add_integer()
    Traceback (most recent call last):
              ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Adding a number and a list
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer